/*
 * This file was generated by the Gradle "init" task.
 */

plugins {
    id("java")
    id("java-library")
    id("maven-publish")
    id("com.github.johnrengelman.shadow") version "8.1.1"
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url = uri("https://hub.spigotmc.org/nexus/content/repositories/snapshots/")
    }
    maven {
        url = uri("https://oss.sonatype.org/content/groups/public/")
    }
    maven {
        url = uri("https://jitpack.io")
    }
    maven {
        url = uri("https://mvn.lumine.io/repository/maven-public/")
    }
    maven {
        url = uri("https://repo.codemc.org/repository/maven-public/")
    }
    maven {
        url = uri("https://repo.codemc.io/repository/maven-public/")
    }
    maven {
        url = uri("https://nexus.lichtspiele.org/repository/releases/")
    }
    maven {
        url = uri("https://libraries.minecraft.net/")
    }
    maven {
        url = uri("https://maven.citizensnpcs.co/repo")
    }
    maven {
        url = uri("https://repo.maven.apache.org/maven2/")
    }
    maven {
        url = uri("https://maven.enginehub.org/repo/")
    }
}

dependencies {
    api("com.github.Y-RyuZU:RyuZUCommandsGenerator:2.3")
    api("com.saicone.rtag:rtag:1.4.2")
    api("com.saicone.rtag:rtag-entity:1.4.2")
    api("com.saicone.rtag:rtag-item:1.4.2")
    api("com.google.guava:guava:31.1-jre")
    api(project(":searchableinfiniteshop-v16newer"))
    api(project(":searchableinfiniteshop-v16older"))
    api(project(":searchableinfiniteshop-api"))
    compileOnly("org.spigotmc:spigot-api:1.20.2-R0.1-SNAPSHOT")
    compileOnly("org.projectlombok:lombok:1.18.26")
    annotationProcessor("org.projectlombok:lombok:1.18.26")
    compileOnly("com.mojang:authlib:1.5.21")
    compileOnly("com.github.MilkBowl:VaultAPI:1.7")
    compileOnly("net.citizensnpcs:citizens-main:2.0.30-SNAPSHOT") {
        exclude("*", "*")
    }
}

tasks {
    shadowJar {
        // Relocate rtag (DO NOT IGNORE THIS)
        relocate("com.saicone.rtag", "${project.group}.libs.rtag")
        // Exclude unused classes (optional)
        minimize()
    }
}

tasks.withType<JavaCompile> {
    options.encoding = "UTF-8"
}