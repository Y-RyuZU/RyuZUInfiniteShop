/*
 * This file was generated by the Gradle "init" task.
 */

plugins {
    id ("java")
    id ("java-library")
    id ("maven-publish")
//    id ("com.github.ryuzu.java-conventions")
    id ("com.github.johnrengelman.shadow") version "7.1.2"
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url = uri("https://hub.spigotmc.org/nexus/content/repositories/snapshots/")
    }
    maven {
        url = uri("https://oss.sonatype.org/content/groups/public/")
    }
    maven {
        url = uri("https://jitpack.io")
    }
    maven {
        url = uri("https://mvn.lumine.io/repository/maven-public/")
    }
    maven {
        url = uri("https://repo.codemc.org/repository/maven-public/")
    }
    maven {
        url = uri("https://repo.codemc.io/repository/maven-public/")
    }
    maven {
        url = uri("https://nexus.lichtspiele.org/repository/releases/")
    }
    maven {
        url = uri("https://libraries.minecraft.net/")
    }
    maven {
        url = uri("https://maven.citizensnpcs.co/repo")
    }
    maven {
        url = uri("https://repo.maven.apache.org/maven2/")
    }
}

dependencies {
    api ("com.github.Y-RyuZU:RyuZUCommandsGenerator:2.3")
    api ("de.tr7zw:item-nbt-api-plugin:2.11.2")
    api("com.google.guava:guava:31.1-jre")
    api (project(":searchableinfiniteshop-v16newer"))
    api (project(":searchableinfiniteshop-v16older"))
    api (project(":searchableinfiniteshop-api"))
    compileOnly ("org.spigotmc:spigot-api:1.16.5-R0.1-SNAPSHOT")
    compileOnly ("org.projectlombok:lombok:1.18.26")
    annotationProcessor ("org.projectlombok:lombok:1.18.26")
    compileOnly ("com.mojang:authlib:1.5.21")
    compileOnly ("com.github.MilkBowl:VaultAPI:1.7")
    compileOnly("net.citizensnpcs:citizens-main:2.0.30-SNAPSHOT") {
        exclude ("*", "*")
    }
}

//publishing {
//    publications {
//        maven(MavenPublication) {
//            from(components.java)
//        }
//    }
//}

tasks.withType<JavaCompile> {
    options.encoding = "UTF-8"
}

tasks.withType<Javadoc> {
    options.encoding = "UTF-8"
}

//processResources {
//    def props = [version: version]
//    inputs.properties props
//    filteringCharset "UTF-8"
//    filesMatching("plugin.yml") {
//        expand props
//    }
//}
